# Development Docker Compose for BiteBase
# Simplified setup for frontend and backend development

version: '3.8'

services:
  # Frontend Development Server
  frontend:
    build:
      context: ./apps/frontend
      dockerfile: Dockerfile.dev
    ports:
      - "12000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:12001
      - NODE_ENV=development
    volumes:
      - ./apps/frontend:/app
      - /app/node_modules
      - /app/.next
    command: npm run dev
    depends_on:
      - backend

  # Backend Development Server
  backend:
    build:
      context: ./apps/backend
      dockerfile: Dockerfile.dev
    ports:
      - "12001:8000"
    environment:
      - NODE_ENV=development
      - PORT=8000
      - HOSTNAME=0.0.0.0
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/bitebase_dev
      - REDIS_URL=redis://redis:6379/0
    volumes:
      - ./apps/backend:/app
      - /app/node_modules
    command: npm run dev
    depends_on:
      - postgres
      - redis

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: bitebase_dev
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
      - ./database/schema.sql:/docker-entrypoint-initdb.d/01-schema.sql

  # Redis Cache
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_dev_data:/data

volumes:
  postgres_dev_data:
  redis_dev_data:

networks:
  default:
    name: bitebase-dev-network