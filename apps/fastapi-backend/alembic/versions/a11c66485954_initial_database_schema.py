"""Initial database schema

Revision ID: a11c66485954
Revises: 
Create Date: 2025-06-12 05:52:20.949955

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'a11c66485954'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('up_permissions_role_lnk_fk', table_name='up_permissions_role_lnk')
    op.drop_index('up_permissions_role_lnk_ifk', table_name='up_permissions_role_lnk')
    op.drop_index('up_permissions_role_lnk_oifk', table_name='up_permissions_role_lnk')
    op.drop_table('up_permissions_role_lnk')
    op.drop_index('files_created_by_id_fk', table_name='files')
    op.drop_index('files_documents_idx', table_name='files')
    op.drop_index('files_updated_by_id_fk', table_name='files')
    op.drop_index('upload_files_created_at_index', table_name='files')
    op.drop_index('upload_files_ext_index', table_name='files')
    op.drop_index('upload_files_folder_path_index', table_name='files')
    op.drop_index('upload_files_name_index', table_name='files')
    op.drop_index('upload_files_size_index', table_name='files')
    op.drop_index('upload_files_updated_at_index', table_name='files')
    op.drop_table('files')
    op.drop_index('admin_roles_created_by_id_fk', table_name='admin_roles')
    op.drop_index('admin_roles_documents_idx', table_name='admin_roles')
    op.drop_index('admin_roles_updated_by_id_fk', table_name='admin_roles')
    op.drop_table('admin_roles')
    op.drop_index('strapi_transfer_token_permissions_token_lnk_fk', table_name='strapi_transfer_token_permissions_token_lnk')
    op.drop_index('strapi_transfer_token_permissions_token_lnk_ifk', table_name='strapi_transfer_token_permissions_token_lnk')
    op.drop_index('strapi_transfer_token_permissions_token_lnk_oifk', table_name='strapi_transfer_token_permissions_token_lnk')
    op.drop_table('strapi_transfer_token_permissions_token_lnk')
    op.drop_index('i18n_locale_created_by_id_fk', table_name='i18n_locale')
    op.drop_index('i18n_locale_documents_idx', table_name='i18n_locale')
    op.drop_index('i18n_locale_updated_by_id_fk', table_name='i18n_locale')
    op.drop_table('i18n_locale')
    op.drop_table('spatial_ref_sys')
    op.drop_index('upload_folders_created_by_id_fk', table_name='upload_folders')
    op.drop_index('upload_folders_documents_idx', table_name='upload_folders')
    op.drop_index('upload_folders_updated_by_id_fk', table_name='upload_folders')
    op.drop_table('upload_folders')
    op.drop_index('admin_permissions_role_lnk_fk', table_name='admin_permissions_role_lnk')
    op.drop_index('admin_permissions_role_lnk_ifk', table_name='admin_permissions_role_lnk')
    op.drop_index('admin_permissions_role_lnk_oifk', table_name='admin_permissions_role_lnk')
    op.drop_table('admin_permissions_role_lnk')
    op.drop_index('strapi_releases_created_by_id_fk', table_name='strapi_releases')
    op.drop_index('strapi_releases_documents_idx', table_name='strapi_releases')
    op.drop_index('strapi_releases_updated_by_id_fk', table_name='strapi_releases')
    op.drop_table('strapi_releases')
    op.drop_index('admin_users_created_by_id_fk', table_name='admin_users')
    op.drop_index('admin_users_documents_idx', table_name='admin_users')
    op.drop_index('admin_users_updated_by_id_fk', table_name='admin_users')
    op.drop_table('admin_users')
    op.drop_index('strapi_api_token_permissions_created_by_id_fk', table_name='strapi_api_token_permissions')
    op.drop_index('strapi_api_token_permissions_documents_idx', table_name='strapi_api_token_permissions')
    op.drop_index('strapi_api_token_permissions_updated_by_id_fk', table_name='strapi_api_token_permissions')
    op.drop_table('strapi_api_token_permissions')
    op.drop_index('strapi_release_actions_release_lnk_fk', table_name='strapi_release_actions_release_lnk')
    op.drop_index('strapi_release_actions_release_lnk_ifk', table_name='strapi_release_actions_release_lnk')
    op.drop_index('strapi_release_actions_release_lnk_oifk', table_name='strapi_release_actions_release_lnk')
    op.drop_table('strapi_release_actions_release_lnk')
    op.drop_index('strapi_transfer_token_permissions_created_by_id_fk', table_name='strapi_transfer_token_permissions')
    op.drop_index('strapi_transfer_token_permissions_documents_idx', table_name='strapi_transfer_token_permissions')
    op.drop_index('strapi_transfer_token_permissions_updated_by_id_fk', table_name='strapi_transfer_token_permissions')
    op.drop_table('strapi_transfer_token_permissions')
    op.drop_index('up_permissions_created_by_id_fk', table_name='up_permissions')
    op.drop_index('up_permissions_documents_idx', table_name='up_permissions')
    op.drop_index('up_permissions_updated_by_id_fk', table_name='up_permissions')
    op.drop_table('up_permissions')
    op.drop_table('strapi_webhooks')
    op.drop_index('strapi_workflows_created_by_id_fk', table_name='strapi_workflows')
    op.drop_index('strapi_workflows_documents_idx', table_name='strapi_workflows')
    op.drop_index('strapi_workflows_updated_by_id_fk', table_name='strapi_workflows')
    op.drop_table('strapi_workflows')
    op.drop_index('strapi_history_versions_created_by_id_fk', table_name='strapi_history_versions')
    op.drop_table('strapi_history_versions')
    op.drop_index('strapi_workflows_stages_permissions_lnk_fk', table_name='strapi_workflows_stages_permissions_lnk')
    op.drop_index('strapi_workflows_stages_permissions_lnk_ifk', table_name='strapi_workflows_stages_permissions_lnk')
    op.drop_index('strapi_workflows_stages_permissions_lnk_ofk', table_name='strapi_workflows_stages_permissions_lnk')
    op.drop_table('strapi_workflows_stages_permissions_lnk')
    op.drop_index('strapi_api_token_permissions_token_lnk_fk', table_name='strapi_api_token_permissions_token_lnk')
    op.drop_index('strapi_api_token_permissions_token_lnk_ifk', table_name='strapi_api_token_permissions_token_lnk')
    op.drop_index('strapi_api_token_permissions_token_lnk_oifk', table_name='strapi_api_token_permissions_token_lnk')
    op.drop_table('strapi_api_token_permissions_token_lnk')
    op.drop_index('admin_permissions_created_by_id_fk', table_name='admin_permissions')
    op.drop_index('admin_permissions_documents_idx', table_name='admin_permissions')
    op.drop_index('admin_permissions_updated_by_id_fk', table_name='admin_permissions')
    op.drop_table('admin_permissions')
    op.drop_index('strapi_workflows_stages_workflow_lnk_fk', table_name='strapi_workflows_stages_workflow_lnk')
    op.drop_index('strapi_workflows_stages_workflow_lnk_ifk', table_name='strapi_workflows_stages_workflow_lnk')
    op.drop_index('strapi_workflows_stages_workflow_lnk_oifk', table_name='strapi_workflows_stages_workflow_lnk')
    op.drop_table('strapi_workflows_stages_workflow_lnk')
    op.drop_index('strapi_transfer_tokens_created_by_id_fk', table_name='strapi_transfer_tokens')
    op.drop_index('strapi_transfer_tokens_documents_idx', table_name='strapi_transfer_tokens')
    op.drop_index('strapi_transfer_tokens_updated_by_id_fk', table_name='strapi_transfer_tokens')
    op.drop_table('strapi_transfer_tokens')
    op.drop_table('strapi_migrations')
    op.drop_index('strapi_workflows_stage_required_to_publish_lnk_fk', table_name='strapi_workflows_stage_required_to_publish_lnk')
    op.drop_index('strapi_workflows_stage_required_to_publish_lnk_ifk', table_name='strapi_workflows_stage_required_to_publish_lnk')
    op.drop_table('strapi_workflows_stage_required_to_publish_lnk')
    op.drop_table('strapi_migrations_internal')
    op.drop_index('files_folder_lnk_fk', table_name='files_folder_lnk')
    op.drop_index('files_folder_lnk_ifk', table_name='files_folder_lnk')
    op.drop_index('files_folder_lnk_oifk', table_name='files_folder_lnk')
    op.drop_table('files_folder_lnk')
    op.drop_index('admin_users_roles_lnk_fk', table_name='admin_users_roles_lnk')
    op.drop_index('admin_users_roles_lnk_ifk', table_name='admin_users_roles_lnk')
    op.drop_index('admin_users_roles_lnk_ofk', table_name='admin_users_roles_lnk')
    op.drop_index('admin_users_roles_lnk_oifk', table_name='admin_users_roles_lnk')
    op.drop_table('admin_users_roles_lnk')
    op.drop_index('up_roles_created_by_id_fk', table_name='up_roles')
    op.drop_index('up_roles_documents_idx', table_name='up_roles')
    op.drop_index('up_roles_updated_by_id_fk', table_name='up_roles')
    op.drop_table('up_roles')
    op.drop_index('files_related_mph_fk', table_name='files_related_mph')
    op.drop_index('files_related_mph_idix', table_name='files_related_mph')
    op.drop_index('files_related_mph_oidx', table_name='files_related_mph')
    op.drop_table('files_related_mph')
    op.drop_table('strapi_database_schema')
    op.drop_index('upload_folders_parent_lnk_fk', table_name='upload_folders_parent_lnk')
    op.drop_index('upload_folders_parent_lnk_ifk', table_name='upload_folders_parent_lnk')
    op.drop_index('upload_folders_parent_lnk_oifk', table_name='upload_folders_parent_lnk')
    op.drop_table('upload_folders_parent_lnk')
    op.drop_index('strapi_workflows_stages_created_by_id_fk', table_name='strapi_workflows_stages')
    op.drop_index('strapi_workflows_stages_documents_idx', table_name='strapi_workflows_stages')
    op.drop_index('strapi_workflows_stages_updated_by_id_fk', table_name='strapi_workflows_stages')
    op.drop_table('strapi_workflows_stages')
    op.drop_index('up_users_role_lnk_fk', table_name='up_users_role_lnk')
    op.drop_index('up_users_role_lnk_ifk', table_name='up_users_role_lnk')
    op.drop_index('up_users_role_lnk_oifk', table_name='up_users_role_lnk')
    op.drop_table('up_users_role_lnk')
    op.drop_index('strapi_api_tokens_created_by_id_fk', table_name='strapi_api_tokens')
    op.drop_index('strapi_api_tokens_documents_idx', table_name='strapi_api_tokens')
    op.drop_index('strapi_api_tokens_updated_by_id_fk', table_name='strapi_api_tokens')
    op.drop_table('strapi_api_tokens')
    op.drop_table('strapi_core_store_settings')
    op.drop_index('up_users_created_by_id_fk', table_name='up_users')
    op.drop_index('up_users_documents_idx', table_name='up_users')
    op.drop_index('up_users_updated_by_id_fk', table_name='up_users')
    op.drop_table('up_users')
    op.drop_index('strapi_release_actions_created_by_id_fk', table_name='strapi_release_actions')
    op.drop_index('strapi_release_actions_documents_idx', table_name='strapi_release_actions')
    op.drop_index('strapi_release_actions_updated_by_id_fk', table_name='strapi_release_actions')
    op.drop_table('strapi_release_actions')
    op.add_column('market_analyses', sa.Column('user_id', sa.String(length=255), nullable=False))
    op.add_column('market_analyses', sa.Column('location', sa.String(length=255), nullable=False))
    op.add_column('market_analyses', sa.Column('market_size', sa.Enum('SMALL', 'MEDIUM', 'LARGE', name='marketsize'), nullable=True))
    op.add_column('market_analyses', sa.Column('total_restaurants', sa.Integer(), nullable=True))
    op.add_column('market_analyses', sa.Column('avg_rating', sa.Float(), nullable=True))
    op.add_column('market_analyses', sa.Column('price_distribution', sa.Text(), nullable=True))
    op.add_column('market_analyses', sa.Column('cuisine_distribution', sa.Text(), nullable=True))
    op.add_column('market_analyses', sa.Column('risk_factors', sa.Text(), nullable=True))
    op.alter_column('market_analyses', 'latitude',
               existing_type=sa.NUMERIC(precision=10, scale=2),
               type_=sa.Float(),
               existing_nullable=True)
    op.alter_column('market_analyses', 'longitude',
               existing_type=sa.NUMERIC(precision=10, scale=2),
               type_=sa.Float(),
               existing_nullable=True)
    op.alter_column('market_analyses', 'radius',
               existing_type=sa.NUMERIC(precision=10, scale=2),
               type_=sa.Float(),
               existing_nullable=True)
    op.alter_column('market_analyses', 'analysis_type',
               existing_type=sa.VARCHAR(length=255),
               type_=sa.String(length=100),
               nullable=False)
    op.alter_column('market_analyses', 'status',
               existing_type=sa.VARCHAR(length=255),
               type_=sa.Enum('PENDING', 'PROCESSING', 'COMPLETED', 'FAILED', name='analysisstatus'),
               existing_nullable=True)
    op.alter_column('market_analyses', 'results',
               existing_type=postgresql.JSONB(astext_type=sa.Text()),
               type_=sa.Text(),
               existing_nullable=True)
    op.alter_column('market_analyses', 'opportunity_score',
               existing_type=sa.NUMERIC(precision=10, scale=2),
               type_=sa.Float(),
               existing_nullable=True)
    op.alter_column('market_analyses', 'competition_level',
               existing_type=sa.VARCHAR(length=255),
               type_=sa.Enum('LOW', 'MEDIUM', 'HIGH', name='competitionlevel'),
               existing_nullable=True)
    op.alter_column('market_analyses', 'recommendations',
               existing_type=postgresql.JSONB(astext_type=sa.Text()),
               type_=sa.Text(),
               existing_nullable=True)
    op.alter_column('market_analyses', 'created_at',
               existing_type=postgresql.TIMESTAMP(precision=6),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True)
    op.alter_column('market_analyses', 'updated_at',
               existing_type=postgresql.TIMESTAMP(precision=6),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True)
    op.drop_index('market_analyses_created_by_id_fk', table_name='market_analyses')
    op.drop_index('market_analyses_documents_idx', table_name='market_analyses')
    op.drop_index('market_analyses_updated_by_id_fk', table_name='market_analyses')
    op.create_index(op.f('ix_market_analyses_id'), 'market_analyses', ['id'], unique=False)
    op.create_index(op.f('ix_market_analyses_latitude'), 'market_analyses', ['latitude'], unique=False)
    op.create_index(op.f('ix_market_analyses_longitude'), 'market_analyses', ['longitude'], unique=False)
    op.drop_constraint('market_analyses_updated_by_id_fk', 'market_analyses', type_='foreignkey')
    op.drop_constraint('market_analyses_created_by_id_fk', 'market_analyses', type_='foreignkey')
    op.create_foreign_key(None, 'market_analyses', 'users', ['user_id'], ['uid'])
    op.drop_column('market_analyses', 'title')
    op.drop_column('market_analyses', 'updated_by_id')
    op.drop_column('market_analyses', 'target_location')
    op.drop_column('market_analyses', 'locale')
    op.drop_column('market_analyses', 'estimated_revenue')
    op.drop_column('market_analyses', 'created_by_id')
    op.drop_column('market_analyses', 'target_cuisine')
    op.drop_column('market_analyses', 'document_id')
    op.drop_column('market_analyses', 'description')
    op.drop_column('market_analyses', 'published_at')
    op.drop_column('market_analyses', 'completed_at')
    op.add_column('restaurants', sa.Column('review_count', sa.Integer(), nullable=True))
    op.add_column('restaurants', sa.Column('phone', sa.String(length=50), nullable=True))
    op.add_column('restaurants', sa.Column('hours', sa.Text(), nullable=True))
    op.add_column('restaurants', sa.Column('images', sa.Text(), nullable=True))
    op.add_column('restaurants', sa.Column('platform', sa.String(length=50), nullable=True))
    op.add_column('restaurants', sa.Column('platform_id', sa.String(length=255), nullable=True))
    op.add_column('restaurants', sa.Column('user_id', sa.String(length=255), nullable=True))
    op.add_column('restaurants', sa.Column('menu_url', sa.String(length=500), nullable=True))
    op.add_column('restaurants', sa.Column('delivery_available', sa.String(length=10), nullable=True))
    op.add_column('restaurants', sa.Column('takeout_available', sa.String(length=10), nullable=True))
    op.add_column('restaurants', sa.Column('reservations_available', sa.String(length=10), nullable=True))
    op.alter_column('restaurants', 'name',
               existing_type=sa.VARCHAR(length=255),
               nullable=False)
    op.alter_column('restaurants', 'latitude',
               existing_type=sa.NUMERIC(precision=10, scale=2),
               type_=sa.Float(),
               nullable=False)
    op.alter_column('restaurants', 'longitude',
               existing_type=sa.NUMERIC(precision=10, scale=2),
               type_=sa.Float(),
               nullable=False)
    op.alter_column('restaurants', 'address',
               existing_type=sa.VARCHAR(length=255),
               type_=sa.Text(),
               existing_nullable=True)
    op.alter_column('restaurants', 'cuisine',
               existing_type=sa.VARCHAR(length=255),
               type_=sa.String(length=100),
               existing_nullable=True)
    op.alter_column('restaurants', 'price_range',
               existing_type=sa.VARCHAR(length=10),
               type_=sa.Enum('BUDGET', 'MODERATE', 'UPSCALE', 'LUXURY', name='pricerange'),
               existing_nullable=True)
    op.alter_column('restaurants', 'rating',
               existing_type=sa.NUMERIC(precision=2, scale=1),
               type_=sa.Float(),
               existing_nullable=True)
    op.alter_column('restaurants', 'website',
               existing_type=sa.VARCHAR(length=255),
               type_=sa.String(length=500),
               existing_nullable=True)
    op.alter_column('restaurants', 'features',
               existing_type=postgresql.JSONB(astext_type=sa.Text()),
               type_=sa.Text(),
               existing_nullable=True)
    op.alter_column('restaurants', 'created_at',
               existing_type=postgresql.TIMESTAMP(precision=6),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True)
    op.alter_column('restaurants', 'updated_at',
               existing_type=postgresql.TIMESTAMP(precision=6),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True)
    op.drop_index('restaurants_created_by_id_fk', table_name='restaurants')
    op.drop_index('restaurants_documents_idx', table_name='restaurants')
    op.drop_index('restaurants_updated_by_id_fk', table_name='restaurants')
    op.create_index(op.f('ix_restaurants_cuisine'), 'restaurants', ['cuisine'], unique=False)
    op.create_index(op.f('ix_restaurants_id'), 'restaurants', ['id'], unique=False)
    op.create_index(op.f('ix_restaurants_latitude'), 'restaurants', ['latitude'], unique=False)
    op.create_index(op.f('ix_restaurants_longitude'), 'restaurants', ['longitude'], unique=False)
    op.create_index(op.f('ix_restaurants_name'), 'restaurants', ['name'], unique=False)
    op.drop_constraint('restaurants_created_by_id_fk', 'restaurants', type_='foreignkey')
    op.drop_constraint('restaurants_updated_by_id_fk', 'restaurants', type_='foreignkey')
    op.create_foreign_key(None, 'restaurants', 'users', ['user_id'], ['uid'])
    op.drop_column('restaurants', 'capacity')
    op.drop_column('restaurants', 'phone_number')
    op.drop_column('restaurants', 'updated_by_id')
    op.drop_column('restaurants', 'locale')
    op.drop_column('restaurants', 'last_updated')
    op.drop_column('restaurants', 'created_by_id')
    op.drop_column('restaurants', 'opening_hours')
    op.drop_column('restaurants', 'document_id')
    op.drop_column('restaurants', 'verified')
    op.drop_column('restaurants', 'year_established')
    op.drop_column('restaurants', 'published_at')
    op.add_column('users', sa.Column('hashed_password', sa.String(length=255), nullable=False))
    op.add_column('users', sa.Column('phone', sa.String(length=50), nullable=True))
    op.add_column('users', sa.Column('is_active', sa.Boolean(), nullable=True))
    op.add_column('users', sa.Column('is_verified', sa.Boolean(), nullable=True))
    op.add_column('users', sa.Column('avatar_url', sa.String(length=500), nullable=True))
    op.add_column('users', sa.Column('last_login', sa.DateTime(timezone=True), nullable=True))
    op.alter_column('users', 'account_type',
               existing_type=sa.VARCHAR(length=50),
               type_=sa.Enum('RESTAURANT', 'FRANCHISE', 'ENTERPRISE', 'ADMIN', name='accounttype'),
               existing_nullable=True,
               existing_server_default=sa.text("'restaurant'::character varying"))
    op.alter_column('users', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('users', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True,
               existing_server_default=sa.text('now()'))
    op.drop_constraint('users_email_key', 'users', type_='unique')
    op.drop_constraint('users_uid_key', 'users', type_='unique')
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_index(op.f('ix_users_uid'), 'users', ['uid'], unique=True)
    op.drop_column('users', 'subscription_plan')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('subscription_plan', sa.VARCHAR(length=50), autoincrement=False, nullable=True))
    op.drop_index(op.f('ix_users_uid'), table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.create_unique_constraint('users_uid_key', 'users', ['uid'])
    op.create_unique_constraint('users_email_key', 'users', ['email'])
    op.alter_column('users', 'updated_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('users', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('users', 'account_type',
               existing_type=sa.Enum('RESTAURANT', 'FRANCHISE', 'ENTERPRISE', 'ADMIN', name='accounttype'),
               type_=sa.VARCHAR(length=50),
               existing_nullable=True,
               existing_server_default=sa.text("'restaurant'::character varying"))
    op.drop_column('users', 'last_login')
    op.drop_column('users', 'avatar_url')
    op.drop_column('users', 'is_verified')
    op.drop_column('users', 'is_active')
    op.drop_column('users', 'phone')
    op.drop_column('users', 'hashed_password')
    op.add_column('restaurants', sa.Column('published_at', postgresql.TIMESTAMP(precision=6), autoincrement=False, nullable=True))
    op.add_column('restaurants', sa.Column('year_established', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('restaurants', sa.Column('verified', sa.BOOLEAN(), autoincrement=False, nullable=True))
    op.add_column('restaurants', sa.Column('document_id', sa.VARCHAR(length=255), autoincrement=False, nullable=True))
    op.add_column('restaurants', sa.Column('opening_hours', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.add_column('restaurants', sa.Column('created_by_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('restaurants', sa.Column('last_updated', postgresql.TIMESTAMP(precision=6), autoincrement=False, nullable=True))
    op.add_column('restaurants', sa.Column('locale', sa.VARCHAR(length=255), autoincrement=False, nullable=True))
    op.add_column('restaurants', sa.Column('updated_by_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('restaurants', sa.Column('phone_number', sa.VARCHAR(length=50), autoincrement=False, nullable=True))
    op.add_column('restaurants', sa.Column('capacity', sa.INTEGER(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'restaurants', type_='foreignkey')
    op.create_foreign_key('restaurants_updated_by_id_fk', 'restaurants', 'admin_users', ['updated_by_id'], ['id'], ondelete='SET NULL')
    op.create_foreign_key('restaurants_created_by_id_fk', 'restaurants', 'admin_users', ['created_by_id'], ['id'], ondelete='SET NULL')
    op.drop_index(op.f('ix_restaurants_name'), table_name='restaurants')
    op.drop_index(op.f('ix_restaurants_longitude'), table_name='restaurants')
    op.drop_index(op.f('ix_restaurants_latitude'), table_name='restaurants')
    op.drop_index(op.f('ix_restaurants_id'), table_name='restaurants')
    op.drop_index(op.f('ix_restaurants_cuisine'), table_name='restaurants')
    op.create_index('restaurants_updated_by_id_fk', 'restaurants', ['updated_by_id'], unique=False)
    op.create_index('restaurants_documents_idx', 'restaurants', ['document_id', 'locale', 'published_at'], unique=False)
    op.create_index('restaurants_created_by_id_fk', 'restaurants', ['created_by_id'], unique=False)
    op.alter_column('restaurants', 'updated_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(precision=6),
               existing_nullable=True)
    op.alter_column('restaurants', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(precision=6),
               existing_nullable=True)
    op.alter_column('restaurants', 'features',
               existing_type=sa.Text(),
               type_=postgresql.JSONB(astext_type=sa.Text()),
               existing_nullable=True)
    op.alter_column('restaurants', 'website',
               existing_type=sa.String(length=500),
               type_=sa.VARCHAR(length=255),
               existing_nullable=True)
    op.alter_column('restaurants', 'rating',
               existing_type=sa.Float(),
               type_=sa.NUMERIC(precision=2, scale=1),
               existing_nullable=True)
    op.alter_column('restaurants', 'price_range',
               existing_type=sa.Enum('BUDGET', 'MODERATE', 'UPSCALE', 'LUXURY', name='pricerange'),
               type_=sa.VARCHAR(length=10),
               existing_nullable=True)
    op.alter_column('restaurants', 'cuisine',
               existing_type=sa.String(length=100),
               type_=sa.VARCHAR(length=255),
               existing_nullable=True)
    op.alter_column('restaurants', 'address',
               existing_type=sa.Text(),
               type_=sa.VARCHAR(length=255),
               existing_nullable=True)
    op.alter_column('restaurants', 'longitude',
               existing_type=sa.Float(),
               type_=sa.NUMERIC(precision=10, scale=2),
               nullable=True)
    op.alter_column('restaurants', 'latitude',
               existing_type=sa.Float(),
               type_=sa.NUMERIC(precision=10, scale=2),
               nullable=True)
    op.alter_column('restaurants', 'name',
               existing_type=sa.VARCHAR(length=255),
               nullable=True)
    op.drop_column('restaurants', 'reservations_available')
    op.drop_column('restaurants', 'takeout_available')
    op.drop_column('restaurants', 'delivery_available')
    op.drop_column('restaurants', 'menu_url')
    op.drop_column('restaurants', 'user_id')
    op.drop_column('restaurants', 'platform_id')
    op.drop_column('restaurants', 'platform')
    op.drop_column('restaurants', 'images')
    op.drop_column('restaurants', 'hours')
    op.drop_column('restaurants', 'phone')
    op.drop_column('restaurants', 'review_count')
    op.add_column('market_analyses', sa.Column('completed_at', postgresql.TIMESTAMP(precision=6), autoincrement=False, nullable=True))
    op.add_column('market_analyses', sa.Column('published_at', postgresql.TIMESTAMP(precision=6), autoincrement=False, nullable=True))
    op.add_column('market_analyses', sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True))
    op.add_column('market_analyses', sa.Column('document_id', sa.VARCHAR(length=255), autoincrement=False, nullable=True))
    op.add_column('market_analyses', sa.Column('target_cuisine', sa.VARCHAR(length=255), autoincrement=False, nullable=True))
    op.add_column('market_analyses', sa.Column('created_by_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('market_analyses', sa.Column('estimated_revenue', sa.BIGINT(), autoincrement=False, nullable=True))
    op.add_column('market_analyses', sa.Column('locale', sa.VARCHAR(length=255), autoincrement=False, nullable=True))
    op.add_column('market_analyses', sa.Column('target_location', sa.VARCHAR(length=255), autoincrement=False, nullable=True))
    op.add_column('market_analyses', sa.Column('updated_by_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('market_analyses', sa.Column('title', sa.VARCHAR(length=255), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'market_analyses', type_='foreignkey')
    op.create_foreign_key('market_analyses_created_by_id_fk', 'market_analyses', 'admin_users', ['created_by_id'], ['id'], ondelete='SET NULL')
    op.create_foreign_key('market_analyses_updated_by_id_fk', 'market_analyses', 'admin_users', ['updated_by_id'], ['id'], ondelete='SET NULL')
    op.drop_index(op.f('ix_market_analyses_longitude'), table_name='market_analyses')
    op.drop_index(op.f('ix_market_analyses_latitude'), table_name='market_analyses')
    op.drop_index(op.f('ix_market_analyses_id'), table_name='market_analyses')
    op.create_index('market_analyses_updated_by_id_fk', 'market_analyses', ['updated_by_id'], unique=False)
    op.create_index('market_analyses_documents_idx', 'market_analyses', ['document_id', 'locale', 'published_at'], unique=False)
    op.create_index('market_analyses_created_by_id_fk', 'market_analyses', ['created_by_id'], unique=False)
    op.alter_column('market_analyses', 'updated_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(precision=6),
               existing_nullable=True)
    op.alter_column('market_analyses', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(precision=6),
               existing_nullable=True)
    op.alter_column('market_analyses', 'recommendations',
               existing_type=sa.Text(),
               type_=postgresql.JSONB(astext_type=sa.Text()),
               existing_nullable=True)
    op.alter_column('market_analyses', 'competition_level',
               existing_type=sa.Enum('LOW', 'MEDIUM', 'HIGH', name='competitionlevel'),
               type_=sa.VARCHAR(length=255),
               existing_nullable=True)
    op.alter_column('market_analyses', 'opportunity_score',
               existing_type=sa.Float(),
               type_=sa.NUMERIC(precision=10, scale=2),
               existing_nullable=True)
    op.alter_column('market_analyses', 'results',
               existing_type=sa.Text(),
               type_=postgresql.JSONB(astext_type=sa.Text()),
               existing_nullable=True)
    op.alter_column('market_analyses', 'status',
               existing_type=sa.Enum('PENDING', 'PROCESSING', 'COMPLETED', 'FAILED', name='analysisstatus'),
               type_=sa.VARCHAR(length=255),
               existing_nullable=True)
    op.alter_column('market_analyses', 'analysis_type',
               existing_type=sa.String(length=100),
               type_=sa.VARCHAR(length=255),
               nullable=True)
    op.alter_column('market_analyses', 'radius',
               existing_type=sa.Float(),
               type_=sa.NUMERIC(precision=10, scale=2),
               existing_nullable=True)
    op.alter_column('market_analyses', 'longitude',
               existing_type=sa.Float(),
               type_=sa.NUMERIC(precision=10, scale=2),
               existing_nullable=True)
    op.alter_column('market_analyses', 'latitude',
               existing_type=sa.Float(),
               type_=sa.NUMERIC(precision=10, scale=2),
               existing_nullable=True)
    op.drop_column('market_analyses', 'risk_factors')
    op.drop_column('market_analyses', 'cuisine_distribution')
    op.drop_column('market_analyses', 'price_distribution')
    op.drop_column('market_analyses', 'avg_rating')
    op.drop_column('market_analyses', 'total_restaurants')
    op.drop_column('market_analyses', 'market_size')
    op.drop_column('market_analyses', 'location')
    op.drop_column('market_analyses', 'user_id')
    op.create_table('strapi_release_actions',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('strapi_release_actions_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('document_id', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('type', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('content_type', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('entry_document_id', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('locale', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('is_entry_valid', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(precision=6), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(precision=6), autoincrement=False, nullable=True),
    sa.Column('published_at', postgresql.TIMESTAMP(precision=6), autoincrement=False, nullable=True),
    sa.Column('created_by_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('updated_by_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['created_by_id'], ['admin_users.id'], name='strapi_release_actions_created_by_id_fk', ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['updated_by_id'], ['admin_users.id'], name='strapi_release_actions_updated_by_id_fk', ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id', name='strapi_release_actions_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('strapi_release_actions_updated_by_id_fk', 'strapi_release_actions', ['updated_by_id'], unique=False)
    op.create_index('strapi_release_actions_documents_idx', 'strapi_release_actions', ['document_id', 'locale', 'published_at'], unique=False)
    op.create_index('strapi_release_actions_created_by_id_fk', 'strapi_release_actions', ['created_by_id'], unique=False)
    op.create_table('up_users',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('up_users_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('document_id', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('username', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('email', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('provider', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('password', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('reset_password_token', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('confirmation_token', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('confirmed', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('blocked', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(precision=6), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(precision=6), autoincrement=False, nullable=True),
    sa.Column('published_at', postgresql.TIMESTAMP(precision=6), autoincrement=False, nullable=True),
    sa.Column('created_by_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('updated_by_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('locale', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['created_by_id'], ['admin_users.id'], name='up_users_created_by_id_fk', ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['updated_by_id'], ['admin_users.id'], name='up_users_updated_by_id_fk', ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id', name='up_users_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('up_users_updated_by_id_fk', 'up_users', ['updated_by_id'], unique=False)
    op.create_index('up_users_documents_idx', 'up_users', ['document_id', 'locale', 'published_at'], unique=False)
    op.create_index('up_users_created_by_id_fk', 'up_users', ['created_by_id'], unique=False)
    op.create_table('strapi_core_store_settings',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('key', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('value', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('type', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('environment', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('tag', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='strapi_core_store_settings_pkey')
    )
    op.create_table('strapi_api_tokens',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('strapi_api_tokens_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('document_id', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('description', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('type', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('access_key', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('encrypted_key', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('last_used_at', postgresql.TIMESTAMP(precision=6), autoincrement=False, nullable=True),
    sa.Column('expires_at', postgresql.TIMESTAMP(precision=6), autoincrement=False, nullable=True),
    sa.Column('lifespan', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(precision=6), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(precision=6), autoincrement=False, nullable=True),
    sa.Column('published_at', postgresql.TIMESTAMP(precision=6), autoincrement=False, nullable=True),
    sa.Column('created_by_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('updated_by_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('locale', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['created_by_id'], ['admin_users.id'], name='strapi_api_tokens_created_by_id_fk', ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['updated_by_id'], ['admin_users.id'], name='strapi_api_tokens_updated_by_id_fk', ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id', name='strapi_api_tokens_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('strapi_api_tokens_updated_by_id_fk', 'strapi_api_tokens', ['updated_by_id'], unique=False)
    op.create_index('strapi_api_tokens_documents_idx', 'strapi_api_tokens', ['document_id', 'locale', 'published_at'], unique=False)
    op.create_index('strapi_api_tokens_created_by_id_fk', 'strapi_api_tokens', ['created_by_id'], unique=False)
    op.create_table('up_users_role_lnk',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('role_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('user_ord', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['role_id'], ['up_roles.id'], name='up_users_role_lnk_ifk', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['up_users.id'], name='up_users_role_lnk_fk', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='up_users_role_lnk_pkey'),
    sa.UniqueConstraint('user_id', 'role_id', name='up_users_role_lnk_uq')
    )
    op.create_index('up_users_role_lnk_oifk', 'up_users_role_lnk', ['user_ord'], unique=False)
    op.create_index('up_users_role_lnk_ifk', 'up_users_role_lnk', ['role_id'], unique=False)
    op.create_index('up_users_role_lnk_fk', 'up_users_role_lnk', ['user_id'], unique=False)
    op.create_table('strapi_workflows_stages',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('strapi_workflows_stages_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('document_id', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('color', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(precision=6), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(precision=6), autoincrement=False, nullable=True),
    sa.Column('published_at', postgresql.TIMESTAMP(precision=6), autoincrement=False, nullable=True),
    sa.Column('created_by_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('updated_by_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('locale', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['created_by_id'], ['admin_users.id'], name='strapi_workflows_stages_created_by_id_fk', ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['updated_by_id'], ['admin_users.id'], name='strapi_workflows_stages_updated_by_id_fk', ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id', name='strapi_workflows_stages_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('strapi_workflows_stages_updated_by_id_fk', 'strapi_workflows_stages', ['updated_by_id'], unique=False)
    op.create_index('strapi_workflows_stages_documents_idx', 'strapi_workflows_stages', ['document_id', 'locale', 'published_at'], unique=False)
    op.create_index('strapi_workflows_stages_created_by_id_fk', 'strapi_workflows_stages', ['created_by_id'], unique=False)
    op.create_table('upload_folders_parent_lnk',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('folder_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('inv_folder_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('folder_ord', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['folder_id'], ['upload_folders.id'], name='upload_folders_parent_lnk_fk', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['inv_folder_id'], ['upload_folders.id'], name='upload_folders_parent_lnk_ifk', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='upload_folders_parent_lnk_pkey'),
    sa.UniqueConstraint('folder_id', 'inv_folder_id', name='upload_folders_parent_lnk_uq')
    )
    op.create_index('upload_folders_parent_lnk_oifk', 'upload_folders_parent_lnk', ['folder_ord'], unique=False)
    op.create_index('upload_folders_parent_lnk_ifk', 'upload_folders_parent_lnk', ['inv_folder_id'], unique=False)
    op.create_index('upload_folders_parent_lnk_fk', 'upload_folders_parent_lnk', ['folder_id'], unique=False)
    op.create_table('strapi_database_schema',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('schema', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('time', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('hash', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='strapi_database_schema_pkey')
    )
    op.create_table('files_related_mph',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('file_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('related_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('related_type', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('field', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('order', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['file_id'], ['files.id'], name='files_related_mph_fk', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='files_related_mph_pkey')
    )
    op.create_index('files_related_mph_oidx', 'files_related_mph', ['order'], unique=False)
    op.create_index('files_related_mph_idix', 'files_related_mph', ['related_id'], unique=False)
    op.create_index('files_related_mph_fk', 'files_related_mph', ['file_id'], unique=False)
    op.create_table('up_roles',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('up_roles_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('document_id', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('description', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('type', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(precision=6), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(precision=6), autoincrement=False, nullable=True),
    sa.Column('published_at', postgresql.TIMESTAMP(precision=6), autoincrement=False, nullable=True),
    sa.Column('created_by_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('updated_by_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('locale', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['created_by_id'], ['admin_users.id'], name='up_roles_created_by_id_fk', ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['updated_by_id'], ['admin_users.id'], name='up_roles_updated_by_id_fk', ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id', name='up_roles_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('up_roles_updated_by_id_fk', 'up_roles', ['updated_by_id'], unique=False)
    op.create_index('up_roles_documents_idx', 'up_roles', ['document_id', 'locale', 'published_at'], unique=False)
    op.create_index('up_roles_created_by_id_fk', 'up_roles', ['created_by_id'], unique=False)
    op.create_table('admin_users_roles_lnk',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('role_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('role_ord', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('user_ord', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['role_id'], ['admin_roles.id'], name='admin_users_roles_lnk_ifk', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['admin_users.id'], name='admin_users_roles_lnk_fk', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='admin_users_roles_lnk_pkey'),
    sa.UniqueConstraint('user_id', 'role_id', name='admin_users_roles_lnk_uq')
    )
    op.create_index('admin_users_roles_lnk_oifk', 'admin_users_roles_lnk', ['user_ord'], unique=False)
    op.create_index('admin_users_roles_lnk_ofk', 'admin_users_roles_lnk', ['role_ord'], unique=False)
    op.create_index('admin_users_roles_lnk_ifk', 'admin_users_roles_lnk', ['role_id'], unique=False)
    op.create_index('admin_users_roles_lnk_fk', 'admin_users_roles_lnk', ['user_id'], unique=False)
    op.create_table('files_folder_lnk',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('file_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('folder_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('file_ord', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['file_id'], ['files.id'], name='files_folder_lnk_fk', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['folder_id'], ['upload_folders.id'], name='files_folder_lnk_ifk', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='files_folder_lnk_pkey'),
    sa.UniqueConstraint('file_id', 'folder_id', name='files_folder_lnk_uq')
    )
    op.create_index('files_folder_lnk_oifk', 'files_folder_lnk', ['file_ord'], unique=False)
    op.create_index('files_folder_lnk_ifk', 'files_folder_lnk', ['folder_id'], unique=False)
    op.create_index('files_folder_lnk_fk', 'files_folder_lnk', ['file_id'], unique=False)
    op.create_table('strapi_migrations_internal',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('time', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='strapi_migrations_internal_pkey')
    )
    op.create_table('strapi_workflows_stage_required_to_publish_lnk',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('workflow_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('workflow_stage_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['workflow_id'], ['strapi_workflows.id'], name='strapi_workflows_stage_required_to_publish_lnk_fk', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['workflow_stage_id'], ['strapi_workflows_stages.id'], name='strapi_workflows_stage_required_to_publish_lnk_ifk', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='strapi_workflows_stage_required_to_publish_lnk_pkey'),
    sa.UniqueConstraint('workflow_id', 'workflow_stage_id', name='strapi_workflows_stage_required_to_publish_lnk_uq')
    )
    op.create_index('strapi_workflows_stage_required_to_publish_lnk_ifk', 'strapi_workflows_stage_required_to_publish_lnk', ['workflow_stage_id'], unique=False)
    op.create_index('strapi_workflows_stage_required_to_publish_lnk_fk', 'strapi_workflows_stage_required_to_publish_lnk', ['workflow_id'], unique=False)
    op.create_table('strapi_migrations',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('time', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='strapi_migrations_pkey')
    )
    op.create_table('strapi_transfer_tokens',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('strapi_transfer_tokens_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('document_id', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('description', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('access_key', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('last_used_at', postgresql.TIMESTAMP(precision=6), autoincrement=False, nullable=True),
    sa.Column('expires_at', postgresql.TIMESTAMP(precision=6), autoincrement=False, nullable=True),
    sa.Column('lifespan', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(precision=6), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(precision=6), autoincrement=False, nullable=True),
    sa.Column('published_at', postgresql.TIMESTAMP(precision=6), autoincrement=False, nullable=True),
    sa.Column('created_by_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('updated_by_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('locale', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['created_by_id'], ['admin_users.id'], name='strapi_transfer_tokens_created_by_id_fk', ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['updated_by_id'], ['admin_users.id'], name='strapi_transfer_tokens_updated_by_id_fk', ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id', name='strapi_transfer_tokens_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('strapi_transfer_tokens_updated_by_id_fk', 'strapi_transfer_tokens', ['updated_by_id'], unique=False)
    op.create_index('strapi_transfer_tokens_documents_idx', 'strapi_transfer_tokens', ['document_id', 'locale', 'published_at'], unique=False)
    op.create_index('strapi_transfer_tokens_created_by_id_fk', 'strapi_transfer_tokens', ['created_by_id'], unique=False)
    op.create_table('strapi_workflows_stages_workflow_lnk',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('workflow_stage_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('workflow_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('workflow_stage_ord', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['workflow_id'], ['strapi_workflows.id'], name='strapi_workflows_stages_workflow_lnk_ifk', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['workflow_stage_id'], ['strapi_workflows_stages.id'], name='strapi_workflows_stages_workflow_lnk_fk', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='strapi_workflows_stages_workflow_lnk_pkey'),
    sa.UniqueConstraint('workflow_stage_id', 'workflow_id', name='strapi_workflows_stages_workflow_lnk_uq')
    )
    op.create_index('strapi_workflows_stages_workflow_lnk_oifk', 'strapi_workflows_stages_workflow_lnk', ['workflow_stage_ord'], unique=False)
    op.create_index('strapi_workflows_stages_workflow_lnk_ifk', 'strapi_workflows_stages_workflow_lnk', ['workflow_id'], unique=False)
    op.create_index('strapi_workflows_stages_workflow_lnk_fk', 'strapi_workflows_stages_workflow_lnk', ['workflow_stage_id'], unique=False)
    op.create_table('admin_permissions',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('admin_permissions_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('document_id', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('action', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('action_parameters', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('subject', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('properties', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('conditions', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(precision=6), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(precision=6), autoincrement=False, nullable=True),
    sa.Column('published_at', postgresql.TIMESTAMP(precision=6), autoincrement=False, nullable=True),
    sa.Column('created_by_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('updated_by_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('locale', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['created_by_id'], ['admin_users.id'], name='admin_permissions_created_by_id_fk', ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['updated_by_id'], ['admin_users.id'], name='admin_permissions_updated_by_id_fk', ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id', name='admin_permissions_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('admin_permissions_updated_by_id_fk', 'admin_permissions', ['updated_by_id'], unique=False)
    op.create_index('admin_permissions_documents_idx', 'admin_permissions', ['document_id', 'locale', 'published_at'], unique=False)
    op.create_index('admin_permissions_created_by_id_fk', 'admin_permissions', ['created_by_id'], unique=False)
    op.create_table('strapi_api_token_permissions_token_lnk',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('api_token_permission_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('api_token_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('api_token_permission_ord', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['api_token_id'], ['strapi_api_tokens.id'], name='strapi_api_token_permissions_token_lnk_ifk', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['api_token_permission_id'], ['strapi_api_token_permissions.id'], name='strapi_api_token_permissions_token_lnk_fk', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='strapi_api_token_permissions_token_lnk_pkey'),
    sa.UniqueConstraint('api_token_permission_id', 'api_token_id', name='strapi_api_token_permissions_token_lnk_uq')
    )
    op.create_index('strapi_api_token_permissions_token_lnk_oifk', 'strapi_api_token_permissions_token_lnk', ['api_token_permission_ord'], unique=False)
    op.create_index('strapi_api_token_permissions_token_lnk_ifk', 'strapi_api_token_permissions_token_lnk', ['api_token_id'], unique=False)
    op.create_index('strapi_api_token_permissions_token_lnk_fk', 'strapi_api_token_permissions_token_lnk', ['api_token_permission_id'], unique=False)
    op.create_table('strapi_workflows_stages_permissions_lnk',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('workflow_stage_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('permission_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('permission_ord', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['permission_id'], ['admin_permissions.id'], name='strapi_workflows_stages_permissions_lnk_ifk', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['workflow_stage_id'], ['strapi_workflows_stages.id'], name='strapi_workflows_stages_permissions_lnk_fk', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='strapi_workflows_stages_permissions_lnk_pkey'),
    sa.UniqueConstraint('workflow_stage_id', 'permission_id', name='strapi_workflows_stages_permissions_lnk_uq')
    )
    op.create_index('strapi_workflows_stages_permissions_lnk_ofk', 'strapi_workflows_stages_permissions_lnk', ['permission_ord'], unique=False)
    op.create_index('strapi_workflows_stages_permissions_lnk_ifk', 'strapi_workflows_stages_permissions_lnk', ['permission_id'], unique=False)
    op.create_index('strapi_workflows_stages_permissions_lnk_fk', 'strapi_workflows_stages_permissions_lnk', ['workflow_stage_id'], unique=False)
    op.create_table('strapi_history_versions',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('content_type', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('related_document_id', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('locale', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('status', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('data', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('schema', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(precision=6), autoincrement=False, nullable=True),
    sa.Column('created_by_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['created_by_id'], ['admin_users.id'], name='strapi_history_versions_created_by_id_fk', ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id', name='strapi_history_versions_pkey')
    )
    op.create_index('strapi_history_versions_created_by_id_fk', 'strapi_history_versions', ['created_by_id'], unique=False)
    op.create_table('strapi_workflows',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('document_id', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('content_types', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(precision=6), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(precision=6), autoincrement=False, nullable=True),
    sa.Column('published_at', postgresql.TIMESTAMP(precision=6), autoincrement=False, nullable=True),
    sa.Column('created_by_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('updated_by_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('locale', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['created_by_id'], ['admin_users.id'], name='strapi_workflows_created_by_id_fk', ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['updated_by_id'], ['admin_users.id'], name='strapi_workflows_updated_by_id_fk', ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id', name='strapi_workflows_pkey')
    )
    op.create_index('strapi_workflows_updated_by_id_fk', 'strapi_workflows', ['updated_by_id'], unique=False)
    op.create_index('strapi_workflows_documents_idx', 'strapi_workflows', ['document_id', 'locale', 'published_at'], unique=False)
    op.create_index('strapi_workflows_created_by_id_fk', 'strapi_workflows', ['created_by_id'], unique=False)
    op.create_table('strapi_webhooks',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('url', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('headers', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('events', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('enabled', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='strapi_webhooks_pkey')
    )
    op.create_table('up_permissions',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('up_permissions_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('document_id', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('action', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(precision=6), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(precision=6), autoincrement=False, nullable=True),
    sa.Column('published_at', postgresql.TIMESTAMP(precision=6), autoincrement=False, nullable=True),
    sa.Column('created_by_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('updated_by_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('locale', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['created_by_id'], ['admin_users.id'], name='up_permissions_created_by_id_fk', ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['updated_by_id'], ['admin_users.id'], name='up_permissions_updated_by_id_fk', ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id', name='up_permissions_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('up_permissions_updated_by_id_fk', 'up_permissions', ['updated_by_id'], unique=False)
    op.create_index('up_permissions_documents_idx', 'up_permissions', ['document_id', 'locale', 'published_at'], unique=False)
    op.create_index('up_permissions_created_by_id_fk', 'up_permissions', ['created_by_id'], unique=False)
    op.create_table('strapi_transfer_token_permissions',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('strapi_transfer_token_permissions_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('document_id', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('action', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(precision=6), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(precision=6), autoincrement=False, nullable=True),
    sa.Column('published_at', postgresql.TIMESTAMP(precision=6), autoincrement=False, nullable=True),
    sa.Column('created_by_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('updated_by_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('locale', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['created_by_id'], ['admin_users.id'], name='strapi_transfer_token_permissions_created_by_id_fk', ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['updated_by_id'], ['admin_users.id'], name='strapi_transfer_token_permissions_updated_by_id_fk', ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id', name='strapi_transfer_token_permissions_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('strapi_transfer_token_permissions_updated_by_id_fk', 'strapi_transfer_token_permissions', ['updated_by_id'], unique=False)
    op.create_index('strapi_transfer_token_permissions_documents_idx', 'strapi_transfer_token_permissions', ['document_id', 'locale', 'published_at'], unique=False)
    op.create_index('strapi_transfer_token_permissions_created_by_id_fk', 'strapi_transfer_token_permissions', ['created_by_id'], unique=False)
    op.create_table('strapi_release_actions_release_lnk',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('release_action_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('release_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('release_action_ord', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['release_action_id'], ['strapi_release_actions.id'], name='strapi_release_actions_release_lnk_fk', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['release_id'], ['strapi_releases.id'], name='strapi_release_actions_release_lnk_ifk', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='strapi_release_actions_release_lnk_pkey'),
    sa.UniqueConstraint('release_action_id', 'release_id', name='strapi_release_actions_release_lnk_uq')
    )
    op.create_index('strapi_release_actions_release_lnk_oifk', 'strapi_release_actions_release_lnk', ['release_action_ord'], unique=False)
    op.create_index('strapi_release_actions_release_lnk_ifk', 'strapi_release_actions_release_lnk', ['release_id'], unique=False)
    op.create_index('strapi_release_actions_release_lnk_fk', 'strapi_release_actions_release_lnk', ['release_action_id'], unique=False)
    op.create_table('strapi_api_token_permissions',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('document_id', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('action', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(precision=6), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(precision=6), autoincrement=False, nullable=True),
    sa.Column('published_at', postgresql.TIMESTAMP(precision=6), autoincrement=False, nullable=True),
    sa.Column('created_by_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('updated_by_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('locale', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['created_by_id'], ['admin_users.id'], name='strapi_api_token_permissions_created_by_id_fk', ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['updated_by_id'], ['admin_users.id'], name='strapi_api_token_permissions_updated_by_id_fk', ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id', name='strapi_api_token_permissions_pkey')
    )
    op.create_index('strapi_api_token_permissions_updated_by_id_fk', 'strapi_api_token_permissions', ['updated_by_id'], unique=False)
    op.create_index('strapi_api_token_permissions_documents_idx', 'strapi_api_token_permissions', ['document_id', 'locale', 'published_at'], unique=False)
    op.create_index('strapi_api_token_permissions_created_by_id_fk', 'strapi_api_token_permissions', ['created_by_id'], unique=False)
    op.create_table('admin_users',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('admin_users_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('document_id', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('firstname', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('lastname', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('username', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('email', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('password', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('reset_password_token', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('registration_token', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('blocked', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('prefered_language', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(precision=6), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(precision=6), autoincrement=False, nullable=True),
    sa.Column('published_at', postgresql.TIMESTAMP(precision=6), autoincrement=False, nullable=True),
    sa.Column('created_by_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('updated_by_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('locale', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['created_by_id'], ['admin_users.id'], name='admin_users_created_by_id_fk', ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['updated_by_id'], ['admin_users.id'], name='admin_users_updated_by_id_fk', ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id', name='admin_users_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('admin_users_updated_by_id_fk', 'admin_users', ['updated_by_id'], unique=False)
    op.create_index('admin_users_documents_idx', 'admin_users', ['document_id', 'locale', 'published_at'], unique=False)
    op.create_index('admin_users_created_by_id_fk', 'admin_users', ['created_by_id'], unique=False)
    op.create_table('strapi_releases',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('document_id', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('released_at', postgresql.TIMESTAMP(precision=6), autoincrement=False, nullable=True),
    sa.Column('scheduled_at', postgresql.TIMESTAMP(precision=6), autoincrement=False, nullable=True),
    sa.Column('timezone', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('status', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(precision=6), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(precision=6), autoincrement=False, nullable=True),
    sa.Column('published_at', postgresql.TIMESTAMP(precision=6), autoincrement=False, nullable=True),
    sa.Column('created_by_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('updated_by_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('locale', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['created_by_id'], ['admin_users.id'], name='strapi_releases_created_by_id_fk', ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['updated_by_id'], ['admin_users.id'], name='strapi_releases_updated_by_id_fk', ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id', name='strapi_releases_pkey')
    )
    op.create_index('strapi_releases_updated_by_id_fk', 'strapi_releases', ['updated_by_id'], unique=False)
    op.create_index('strapi_releases_documents_idx', 'strapi_releases', ['document_id', 'locale', 'published_at'], unique=False)
    op.create_index('strapi_releases_created_by_id_fk', 'strapi_releases', ['created_by_id'], unique=False)
    op.create_table('admin_permissions_role_lnk',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('permission_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('role_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('permission_ord', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['permission_id'], ['admin_permissions.id'], name='admin_permissions_role_lnk_fk', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['role_id'], ['admin_roles.id'], name='admin_permissions_role_lnk_ifk', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='admin_permissions_role_lnk_pkey'),
    sa.UniqueConstraint('permission_id', 'role_id', name='admin_permissions_role_lnk_uq')
    )
    op.create_index('admin_permissions_role_lnk_oifk', 'admin_permissions_role_lnk', ['permission_ord'], unique=False)
    op.create_index('admin_permissions_role_lnk_ifk', 'admin_permissions_role_lnk', ['role_id'], unique=False)
    op.create_index('admin_permissions_role_lnk_fk', 'admin_permissions_role_lnk', ['permission_id'], unique=False)
    op.create_table('upload_folders',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('document_id', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('path_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('path', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(precision=6), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(precision=6), autoincrement=False, nullable=True),
    sa.Column('published_at', postgresql.TIMESTAMP(precision=6), autoincrement=False, nullable=True),
    sa.Column('created_by_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('updated_by_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('locale', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['created_by_id'], ['admin_users.id'], name='upload_folders_created_by_id_fk', ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['updated_by_id'], ['admin_users.id'], name='upload_folders_updated_by_id_fk', ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id', name='upload_folders_pkey'),
    sa.UniqueConstraint('path', name='upload_folders_path_index'),
    sa.UniqueConstraint('path_id', name='upload_folders_path_id_index')
    )
    op.create_index('upload_folders_updated_by_id_fk', 'upload_folders', ['updated_by_id'], unique=False)
    op.create_index('upload_folders_documents_idx', 'upload_folders', ['document_id', 'locale', 'published_at'], unique=False)
    op.create_index('upload_folders_created_by_id_fk', 'upload_folders', ['created_by_id'], unique=False)
    op.create_table('spatial_ref_sys',
    sa.Column('srid', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('auth_name', sa.VARCHAR(length=256), autoincrement=False, nullable=True),
    sa.Column('auth_srid', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('srtext', sa.VARCHAR(length=2048), autoincrement=False, nullable=True),
    sa.Column('proj4text', sa.VARCHAR(length=2048), autoincrement=False, nullable=True),
    sa.CheckConstraint('srid > 0 AND srid <= 998999', name='spatial_ref_sys_srid_check'),
    sa.PrimaryKeyConstraint('srid', name='spatial_ref_sys_pkey')
    )
    op.create_table('i18n_locale',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('document_id', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('code', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(precision=6), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(precision=6), autoincrement=False, nullable=True),
    sa.Column('published_at', postgresql.TIMESTAMP(precision=6), autoincrement=False, nullable=True),
    sa.Column('created_by_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('updated_by_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('locale', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['created_by_id'], ['admin_users.id'], name='i18n_locale_created_by_id_fk', ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['updated_by_id'], ['admin_users.id'], name='i18n_locale_updated_by_id_fk', ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id', name='i18n_locale_pkey')
    )
    op.create_index('i18n_locale_updated_by_id_fk', 'i18n_locale', ['updated_by_id'], unique=False)
    op.create_index('i18n_locale_documents_idx', 'i18n_locale', ['document_id', 'locale', 'published_at'], unique=False)
    op.create_index('i18n_locale_created_by_id_fk', 'i18n_locale', ['created_by_id'], unique=False)
    op.create_table('strapi_transfer_token_permissions_token_lnk',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('transfer_token_permission_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('transfer_token_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('transfer_token_permission_ord', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['transfer_token_id'], ['strapi_transfer_tokens.id'], name='strapi_transfer_token_permissions_token_lnk_ifk', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['transfer_token_permission_id'], ['strapi_transfer_token_permissions.id'], name='strapi_transfer_token_permissions_token_lnk_fk', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='strapi_transfer_token_permissions_token_lnk_pkey'),
    sa.UniqueConstraint('transfer_token_permission_id', 'transfer_token_id', name='strapi_transfer_token_permissions_token_lnk_uq')
    )
    op.create_index('strapi_transfer_token_permissions_token_lnk_oifk', 'strapi_transfer_token_permissions_token_lnk', ['transfer_token_permission_ord'], unique=False)
    op.create_index('strapi_transfer_token_permissions_token_lnk_ifk', 'strapi_transfer_token_permissions_token_lnk', ['transfer_token_id'], unique=False)
    op.create_index('strapi_transfer_token_permissions_token_lnk_fk', 'strapi_transfer_token_permissions_token_lnk', ['transfer_token_permission_id'], unique=False)
    op.create_table('admin_roles',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('document_id', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('code', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('description', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(precision=6), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(precision=6), autoincrement=False, nullable=True),
    sa.Column('published_at', postgresql.TIMESTAMP(precision=6), autoincrement=False, nullable=True),
    sa.Column('created_by_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('updated_by_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('locale', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['created_by_id'], ['admin_users.id'], name='admin_roles_created_by_id_fk', ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['updated_by_id'], ['admin_users.id'], name='admin_roles_updated_by_id_fk', ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id', name='admin_roles_pkey')
    )
    op.create_index('admin_roles_updated_by_id_fk', 'admin_roles', ['updated_by_id'], unique=False)
    op.create_index('admin_roles_documents_idx', 'admin_roles', ['document_id', 'locale', 'published_at'], unique=False)
    op.create_index('admin_roles_created_by_id_fk', 'admin_roles', ['created_by_id'], unique=False)
    op.create_table('files',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('document_id', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('alternative_text', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('caption', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('width', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('height', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('formats', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('hash', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('ext', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('mime', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('size', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=True),
    sa.Column('url', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('preview_url', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('provider', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('provider_metadata', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('folder_path', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(precision=6), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(precision=6), autoincrement=False, nullable=True),
    sa.Column('published_at', postgresql.TIMESTAMP(precision=6), autoincrement=False, nullable=True),
    sa.Column('created_by_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('updated_by_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('locale', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['created_by_id'], ['admin_users.id'], name='files_created_by_id_fk', ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['updated_by_id'], ['admin_users.id'], name='files_updated_by_id_fk', ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id', name='files_pkey')
    )
    op.create_index('upload_files_updated_at_index', 'files', ['updated_at'], unique=False)
    op.create_index('upload_files_size_index', 'files', ['size'], unique=False)
    op.create_index('upload_files_name_index', 'files', ['name'], unique=False)
    op.create_index('upload_files_folder_path_index', 'files', ['folder_path'], unique=False)
    op.create_index('upload_files_ext_index', 'files', ['ext'], unique=False)
    op.create_index('upload_files_created_at_index', 'files', ['created_at'], unique=False)
    op.create_index('files_updated_by_id_fk', 'files', ['updated_by_id'], unique=False)
    op.create_index('files_documents_idx', 'files', ['document_id', 'locale', 'published_at'], unique=False)
    op.create_index('files_created_by_id_fk', 'files', ['created_by_id'], unique=False)
    op.create_table('up_permissions_role_lnk',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('permission_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('role_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('permission_ord', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['permission_id'], ['up_permissions.id'], name='up_permissions_role_lnk_fk', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['role_id'], ['up_roles.id'], name='up_permissions_role_lnk_ifk', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='up_permissions_role_lnk_pkey'),
    sa.UniqueConstraint('permission_id', 'role_id', name='up_permissions_role_lnk_uq')
    )
    op.create_index('up_permissions_role_lnk_oifk', 'up_permissions_role_lnk', ['permission_ord'], unique=False)
    op.create_index('up_permissions_role_lnk_ifk', 'up_permissions_role_lnk', ['role_id'], unique=False)
    op.create_index('up_permissions_role_lnk_fk', 'up_permissions_role_lnk', ['permission_id'], unique=False)
    # ### end Alembic commands ###